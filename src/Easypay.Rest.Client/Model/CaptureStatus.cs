/*
 * Easypay Payments API
 *
 * <a href='https://www.easypay.pt/en/legal-terms-and-conditions/' class='item'>Terms conditions and legal terms</a><br><a href='https://www.easypay.pt/en/privacy-and-data-protection-policy/' class='item'>Privacy Policy</a>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: tec@easypay.pt
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Easypay.Rest.Client.Client.OpenAPIDateConverter;

namespace Easypay.Rest.Client.Model
{
    /// <summary>
    /// Indicates the current status of the capture. Possible values include: - delayed: The capture attempt is scheduled for a future date and does not require further user interaction due to prior consent (e.g., authorization or frequent). - waiting: The payment instruction has been given, but the chosen payment method requires confirmation from an external entity before the status of the operation is finalized. - pending: The capture is pending user completion. - success: The capture has been completed successfully. - failed: The capture could not be completed due to an error or issue. - refunded: The capture has been refunded.  This field provides a clear indication of the current state of the capture, helping users understand its progress and outcome.
    /// </summary>
    /// <value>Indicates the current status of the capture. Possible values include: - delayed: The capture attempt is scheduled for a future date and does not require further user interaction due to prior consent (e.g., authorization or frequent). - waiting: The payment instruction has been given, but the chosen payment method requires confirmation from an external entity before the status of the operation is finalized. - pending: The capture is pending user completion. - success: The capture has been completed successfully. - failed: The capture could not be completed due to an error or issue. - refunded: The capture has been refunded.  This field provides a clear indication of the current state of the capture, helping users understand its progress and outcome.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum CaptureStatus
    {
        /// <summary>
        /// Enum Delayed for value: delayed
        /// </summary>
        [EnumMember(Value = "delayed")]
        Delayed = 1,

        /// <summary>
        /// Enum Waiting for value: waiting
        /// </summary>
        [EnumMember(Value = "waiting")]
        Waiting = 2,

        /// <summary>
        /// Enum Success for value: success
        /// </summary>
        [EnumMember(Value = "success")]
        Success = 3,

        /// <summary>
        /// Enum Pending for value: pending
        /// </summary>
        [EnumMember(Value = "pending")]
        Pending = 4,

        /// <summary>
        /// Enum Failed for value: failed
        /// </summary>
        [EnumMember(Value = "failed")]
        Failed = 5,

        /// <summary>
        /// Enum Refunded for value: refunded
        /// </summary>
        [EnumMember(Value = "refunded")]
        Refunded = 6
    }

}
