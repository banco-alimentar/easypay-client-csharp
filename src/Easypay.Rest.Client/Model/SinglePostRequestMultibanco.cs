/*
 * Easypay Payments API
 *
 * <a href='https://www.easypay.pt/en/legal-terms-and-conditions/' class='item'>Terms conditions and legal terms</a><br><a href='https://www.easypay.pt/en/privacy-and-data-protection-policy/' class='item'>Privacy Policy</a>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: tec@easypay.pt
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Easypay.Rest.Client.Client.OpenAPIDateConverter;

namespace Easypay.Rest.Client.Model
{
    /// <summary>
    /// An object that holds the details specific to a Multibanco transaction.
    /// </summary>
    [DataContract(Name = "single_post_request_multibanco")]
    public partial class SinglePostRequestMultibanco : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SinglePostRequestMultibanco" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SinglePostRequestMultibanco() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SinglePostRequestMultibanco" /> class.
        /// </summary>
        /// <param name="expirationTime">The end timestamp indicating the deadline by which the Multibanco Reference must be paid. It defines the final time within which the payment must be completed. The format follows RFC3339 (e.g., \&quot;2024-06-30T21:38:31Z\&quot;). (required).</param>
        /// <param name="startTime">The starting timestamp indicating when the Multibanco Reference becomes valid for payment. It defines the initial time from which the payment can be made. The format follows RFC3339 (e.g., \&quot;2024-06-30T21:38:31Z\&quot;). This field is optional and defaults to the current timestamp if not specified, or if the sent value is in the past..</param>
        public SinglePostRequestMultibanco(DateTime expirationTime = default(DateTime), DateTime startTime = default(DateTime))
        {
            this.ExpirationTime = expirationTime;
            this.StartTime = startTime;
        }

        /// <summary>
        /// The end timestamp indicating the deadline by which the Multibanco Reference must be paid. It defines the final time within which the payment must be completed. The format follows RFC3339 (e.g., \&quot;2024-06-30T21:38:31Z\&quot;).
        /// </summary>
        /// <value>The end timestamp indicating the deadline by which the Multibanco Reference must be paid. It defines the final time within which the payment must be completed. The format follows RFC3339 (e.g., \&quot;2024-06-30T21:38:31Z\&quot;).</value>
        [DataMember(Name = "expiration_time", IsRequired = true, EmitDefaultValue = true)]
        public DateTime ExpirationTime { get; set; }

        /// <summary>
        /// The starting timestamp indicating when the Multibanco Reference becomes valid for payment. It defines the initial time from which the payment can be made. The format follows RFC3339 (e.g., \&quot;2024-06-30T21:38:31Z\&quot;). This field is optional and defaults to the current timestamp if not specified, or if the sent value is in the past.
        /// </summary>
        /// <value>The starting timestamp indicating when the Multibanco Reference becomes valid for payment. It defines the initial time from which the payment can be made. The format follows RFC3339 (e.g., \&quot;2024-06-30T21:38:31Z\&quot;). This field is optional and defaults to the current timestamp if not specified, or if the sent value is in the past.</value>
        [DataMember(Name = "start_time", EmitDefaultValue = false)]
        public DateTime StartTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SinglePostRequestMultibanco {\n");
            sb.Append("  ExpirationTime: ").Append(ExpirationTime).Append("\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
