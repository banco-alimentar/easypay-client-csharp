/*
 * Easypay Payments API
 *
 * <a href='https://www.easypay.pt/en/legal-terms-and-conditions/' class='item'>Terms conditions and legal terms</a><br><a href='https://www.easypay.pt/en/privacy-and-data-protection-policy/' class='item'>Privacy Policy</a>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: tec@easypay.pt
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Easypay.Rest.Client.Client.OpenAPIDateConverter;

namespace Easypay.Rest.Client.Model
{
    /// <summary>
    /// MbwaySdk
    /// </summary>
    [DataContract(Name = "Mbway_sdk")]
    public partial class MbwaySdk : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MbwaySdk" /> class.
        /// </summary>
        /// <param name="purchaseToken">purchaseToken.</param>
        /// <param name="initialTimestamp">initialTimestamp.</param>
        /// <param name="merchantOperationId">unique-concatenation between client identifier and client operation id (total max 20 chars).</param>
        /// <param name="payload">payload.</param>
        public MbwaySdk(string purchaseToken = default(string), string initialTimestamp = default(string), string merchantOperationId = default(string), string payload = default(string))
        {
            this.PurchaseToken = purchaseToken;
            this.InitialTimestamp = initialTimestamp;
            this.MerchantOperationId = merchantOperationId;
            this.Payload = payload;
        }

        /// <summary>
        /// Gets or Sets PurchaseToken
        /// </summary>
        /*
        <example>626E6AA2224D017917D839D4D39296B49441A1D10DA7E8DB6E7E1A4356DDE75429531BEB32190C6D736FA12C7A116CA5F3FCAEE72570406F51371A0CB6E14B6B</example>
        */
        [DataMember(Name = "purchase_token", EmitDefaultValue = false)]
        public string PurchaseToken { get; set; }

        /// <summary>
        /// Gets or Sets InitialTimestamp
        /// </summary>
        /*
        <example>2018-01-01 23:59:59</example>
        */
        [DataMember(Name = "initial_timestamp", EmitDefaultValue = false)]
        public string InitialTimestamp { get; set; }

        /// <summary>
        /// unique-concatenation between client identifier and client operation id (total max 20 chars)
        /// </summary>
        /// <value>unique-concatenation between client identifier and client operation id (total max 20 chars)</value>
        /*
        <example>TESTACCOUNT5436</example>
        */
        [DataMember(Name = "merchant_operation_id", EmitDefaultValue = false)]
        public string MerchantOperationId { get; set; }

        /// <summary>
        /// Gets or Sets Payload
        /// </summary>
        /*
        <example>{&#39;purchase_token&#39;:&#39;EDEB342D3588DDDEEE3E070476E72A6B222E3456C1C825D3E89A734005CE81F69986045424984F55B3233CBFD090A8A564071BBB493F34C4849C964&#39;,&#39;initial_timestamp&#39;:&#39;2018-09-20T10:46:08+01:00&#39;,&#39;merchant_operation_id&#39;:&#39;TESTACCOUNT5436&#39;,&#39;payload&#39;:{&#39;amount&#39;:1000,&#39;currencyCode&#39;:&#39;9782&#39;}}</example>
        */
        [DataMember(Name = "payload", EmitDefaultValue = false)]
        public string Payload { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MbwaySdk {\n");
            sb.Append("  PurchaseToken: ").Append(PurchaseToken).Append("\n");
            sb.Append("  InitialTimestamp: ").Append(InitialTimestamp).Append("\n");
            sb.Append("  MerchantOperationId: ").Append(MerchantOperationId).Append("\n");
            sb.Append("  Payload: ").Append(Payload).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
