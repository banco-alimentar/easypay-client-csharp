/*
 * Easypay Payments API
 *
 * <a href='https://www.easypay.pt/en/legal-terms-and-conditions/' class='item'>Terms conditions and legal terms</a><br><a href='https://www.easypay.pt/en/privacy-and-data-protection-policy/' class='item'>Privacy Policy</a>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: tec@easypay.pt
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Easypay.Rest.Client.Client.OpenAPIDateConverter;

namespace Easypay.Rest.Client.Model
{
    /// <summary>
    /// OutPaymentGet200ResponseDataInner
    /// </summary>
    [DataContract(Name = "_out_payment_get_200_response_data_inner")]
    public partial class OutPaymentGet200ResponseDataInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OutPaymentGet200ResponseDataInner" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="status">status.</param>
        /// <param name="type">type.</param>
        /// <param name="method">method.</param>
        /// <param name="customer">customer.</param>
        /// <param name="account">account.</param>
        /// <param name="outAccount">outAccount.</param>
        /// <param name="key">key.</param>
        /// <param name="value">value.</param>
        /// <param name="scheduleAt">scheduleAt.</param>
        /// <param name="transactions">transactions.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="timestamp">timestamp.</param>
        public OutPaymentGet200ResponseDataInner(string id = default(string), string status = default(string), string type = default(string), string method = default(string), SubscriptionPost201ResponseCustomer customer = default(SubscriptionPost201ResponseCustomer), SubscriptionPost201ResponseCustomer account = default(SubscriptionPost201ResponseCustomer), SubscriptionPost201ResponseCustomer outAccount = default(SubscriptionPost201ResponseCustomer), string key = default(string), int value = default(int), string scheduleAt = default(string), Collection<AuthorisationIdGet200ResponseTransactionsInner> transactions = default(Collection<AuthorisationIdGet200ResponseTransactionsInner>), string createdAt = default(string), string timestamp = default(string))
        {
            this.Id = id;
            this.Status = status;
            this.Type = type;
            this.Method = method;
            this.Customer = customer;
            this.Account = account;
            this.OutAccount = outAccount;
            this.Key = key;
            this.Value = value;
            this.ScheduleAt = scheduleAt;
            this.Transactions = transactions;
            this.CreatedAt = createdAt;
            this.Timestamp = timestamp;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets Method
        /// </summary>
        [DataMember(Name = "method", EmitDefaultValue = false)]
        public string Method { get; set; }

        /// <summary>
        /// Gets or Sets Customer
        /// </summary>
        [DataMember(Name = "customer", EmitDefaultValue = false)]
        public SubscriptionPost201ResponseCustomer Customer { get; set; }

        /// <summary>
        /// Gets or Sets Account
        /// </summary>
        [DataMember(Name = "account", EmitDefaultValue = false)]
        public SubscriptionPost201ResponseCustomer Account { get; set; }

        /// <summary>
        /// Gets or Sets OutAccount
        /// </summary>
        [DataMember(Name = "out_account", EmitDefaultValue = false)]
        public SubscriptionPost201ResponseCustomer OutAccount { get; set; }

        /// <summary>
        /// Gets or Sets Key
        /// </summary>
        [DataMember(Name = "key", EmitDefaultValue = false)]
        public string Key { get; set; }

        /// <summary>
        /// Gets or Sets Value
        /// </summary>
        [DataMember(Name = "value", EmitDefaultValue = false)]
        public int Value { get; set; }

        /// <summary>
        /// Gets or Sets ScheduleAt
        /// </summary>
        [DataMember(Name = "schedule_at", EmitDefaultValue = false)]
        public string ScheduleAt { get; set; }

        /// <summary>
        /// Gets or Sets Transactions
        /// </summary>
        [DataMember(Name = "transactions", EmitDefaultValue = false)]
        public Collection<AuthorisationIdGet200ResponseTransactionsInner> Transactions { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "created_at", EmitDefaultValue = false)]
        public string CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets Timestamp
        /// </summary>
        [DataMember(Name = "timestamp", EmitDefaultValue = false)]
        public string Timestamp { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OutPaymentGet200ResponseDataInner {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Method: ").Append(Method).Append("\n");
            sb.Append("  Customer: ").Append(Customer).Append("\n");
            sb.Append("  Account: ").Append(Account).Append("\n");
            sb.Append("  OutAccount: ").Append(OutAccount).Append("\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  ScheduleAt: ").Append(ScheduleAt).Append("\n");
            sb.Append("  Transactions: ").Append(Transactions).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Timestamp: ").Append(Timestamp).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
