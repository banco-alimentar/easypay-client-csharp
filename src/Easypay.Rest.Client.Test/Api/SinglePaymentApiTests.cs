/*
 * Easypay API
 *
 * EasyPay - API
 *
 * The version of the OpenAPI document: 2.0.2
 * Contact: tec@easypay.pt
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Easypay.Rest.Client.Client;
using Easypay.Rest.Client.Api;
// uncomment below to import models
//using Easypay.Rest.Client.Model;

namespace Easypay.Rest.Client.Test.Api
{
    /// <summary>
    ///  Class for testing SinglePaymentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SinglePaymentApiTests : IDisposable
    {
        private SinglePaymentApi instance;

        public SinglePaymentApiTests()
        {
            instance = new SinglePaymentApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SinglePaymentApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SinglePaymentApi
            //Assert.IsType<SinglePaymentApi>(instance);
        }

        /// <summary>
        /// Test CreateSinglePayment
        /// </summary>
        [Fact]
        public void CreateSinglePaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SinglePaymentRequest singlePaymentRequest = null;
            //var response = instance.CreateSinglePayment(singlePaymentRequest);
            //Assert.IsType<SinglePaymentResponse>(response);
        }

        /// <summary>
        /// Test DeleteSinglePayment
        /// </summary>
        [Fact]
        public void DeleteSinglePaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //instance.DeleteSinglePayment(id);
        }

        /// <summary>
        /// Test GetSinglePayment
        /// </summary>
        [Fact]
        public void GetSinglePaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //var response = instance.GetSinglePayment(id);
            //Assert.IsType<SinglePaymentWithTransactionsResponse>(response);
        }

        /// <summary>
        /// Test ListSinglePayments
        /// </summary>
        [Fact]
        public void ListSinglePaymentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? recordsPerPage = null;
            //string type = null;
            //string expirationTime = null;
            //string method = null;
            //string customer = null;
            //Guid? id = null;
            //string key = null;
            //double? value = null;
            //string createdAt = null;
            //var response = instance.ListSinglePayments(page, recordsPerPage, type, expirationTime, method, customer, id, key, value, createdAt);
            //Assert.IsType<ListSinglePaymentResponse>(response);
        }

        /// <summary>
        /// Test UpdateSinglePayment
        /// </summary>
        [Fact]
        public void UpdateSinglePaymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid id = null;
            //SinglePaymentUpdateRequest singlePaymentUpdateRequest = null;
            //var response = instance.UpdateSinglePayment(id, singlePaymentUpdateRequest);
            //Assert.IsType<SinglePaymentUpdateResponse>(response);
        }
    }
}
