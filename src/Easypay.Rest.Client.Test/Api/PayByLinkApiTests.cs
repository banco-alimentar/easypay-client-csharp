/*
 * Easypay Payments API
 *
 * <a href='https://www.easypay.pt/en/legal-terms-and-conditions/' class='item'>Terms conditions and legal terms</a><br><a href='https://www.easypay.pt/en/privacy-and-data-protection-policy/' class='item'>Privacy Policy</a>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: tec@easypay.pt
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Easypay.Rest.Client.Client;
using Easypay.Rest.Client.Api;
// uncomment below to import models
//using Easypay.Rest.Client.Model;

namespace Easypay.Rest.Client.Test.Api
{
    /// <summary>
    ///  Class for testing PayByLinkApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PayByLinkApiTests : IDisposable
    {
        private PayByLinkApi instance;

        public PayByLinkApiTests()
        {
            instance = new PayByLinkApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PayByLinkApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PayByLinkApi
            //Assert.IsType<PayByLinkApi>(instance);
        }

        /// <summary>
        /// Test GetLink
        /// </summary>
        [Fact]
        public void GetLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? cursor = null;
            //decimal? limit = null;
            //var response = instance.GetLink(cursor, limit);
            //Assert.IsType<GetLink200Response>(response);
        }

        /// <summary>
        /// Test GetLinkId
        /// </summary>
        [Fact]
        public void GetLinkIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetLinkId(id);
            //Assert.IsType<Link>(response);
        }

        /// <summary>
        /// Test PatchLink
        /// </summary>
        [Fact]
        public void PatchLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //PatchLinkRequest? patchLinkRequest = null;
            //instance.PatchLink(id, patchLinkRequest);
        }

        /// <summary>
        /// Test PostLink
        /// </summary>
        [Fact]
        public void PostLinkTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PostLinkRequest? postLinkRequest = null;
            //var response = instance.PostLink(postLinkRequest);
            //Assert.IsType<Link>(response);
        }
    }
}
