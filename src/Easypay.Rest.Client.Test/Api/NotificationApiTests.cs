/*
 * Easypay API
 *
 * EasyPay - API
 *
 * The version of the OpenAPI document: 2.0.2
 * Contact: tec@easypay.pt
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Easypay.Rest.Client.Client;
using Easypay.Rest.Client.Api;
// uncomment below to import models
//using Easypay.Rest.Client.Model;

namespace Easypay.Rest.Client.Test.Api
{
    /// <summary>
    ///  Class for testing NotificationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class NotificationApiTests : IDisposable
    {
        private NotificationApi instance;

        public NotificationApiTests()
        {
            instance = new NotificationApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of NotificationApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' NotificationApi
            //Assert.IsType<NotificationApi>(instance);
        }

        /// <summary>
        /// Test AuthorisationNotification
        /// </summary>
        [Fact]
        public void AuthorisationNotificationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AuthorisationNotificationRequest authorisationNotificationRequest = null;
            //var response = instance.AuthorisationNotification(authorisationNotificationRequest);
            //Assert.IsType<StatusDetails>(response);
        }

        /// <summary>
        /// Test GenericNotification
        /// </summary>
        [Fact]
        public void GenericNotificationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GenericNotificationRequest genericNotificationRequest = null;
            //var response = instance.GenericNotification(genericNotificationRequest);
            //Assert.IsType<StatusDetails>(response);
        }

        /// <summary>
        /// Test TransactionNotification
        /// </summary>
        [Fact]
        public void TransactionNotificationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TransactionNotificationRequest transactionNotificationRequest = null;
            //var response = instance.TransactionNotification(transactionNotificationRequest);
            //Assert.IsType<StatusDetails>(response);
        }
    }
}
