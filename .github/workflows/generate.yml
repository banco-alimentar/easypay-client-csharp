name: EasyPay (.Net) Generate

on: [push, pull_request]

env: 
  CONFIGURATION: Release
  OPENAPI_GENERATOR_SPEC: ./openapi-specs/easypay-3.0.yaml
  OPENAPI_GENERATOR_NAME: csharp-netcore
  #OPENAPI_GENERATOR_OUTPUT: .
  OPENAPI_VERSION: '5.0.1'
  RELEASE_NOTE: 'easypay C# SDK Pre-release'
  GIT_USER_ID: banco-alimentar
  GIT_REPO_ID: easypay-client-csharp

jobs:
  build:
    name: Generate SDK

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Install NBGV tool
      uses: dotnet/nbgv@master
      id: nbgv
      with:
        setAllVars: true
    - name: Install OpenApi-Generator
      # working-directory: ./temp      
      run: |
        mkdir -p ${{ runner.temp }}/openapitools
        curl https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/bin/utils/openapi-generator-cli.sh > ${{ runner.temp }}/openapitools/openapi-generator-cli
        chmod u+x ${{ runner.temp }}/openapitools/openapi-generator-cli

    - name: Set OpenApi-Generator Version
      run: export OPENAPI_GENERATOR_VERSION=${{ env.OPENAPI_VERSION }}

    - name: Generate C# SDK with OpenApi-Generator
      # working-directory: ./temp      
      run: ${{ runner.temp }}/openapitools/openapi-generator-cli generate --additional-properties=packageVersion=${{ steps.nbgv.outputs.Version }} -i ${{ env.OPENAPI_GENERATOR_SPEC }} -g ${{ env.OPENAPI_GENERATOR_NAME }} -c ./openapi-specs/config.dotnet.json --release-note {{ env.RELEASE_NOTE }} --git-user-id "banco-alimentar" --git-repo-id "easypay-client-csharp"

    - name: LS
      run: ls -laR
      #working-directory: ${{ runner.temp }}

    - name: Push sdk code
      run: |
        chmod u+x git_push.sh
        git update-index --chmod +x 
        ./git_push.sh {{ env.GIT_USER_ID }} {{ env.GIT_REPO_ID }} "{{ env.RELEASE_NOTE }}" "github.com"
      # shell: bash
      # run: git_push.sh

    - name: Create Package 
      run: dotnet pack --configuration ${{ env.CONFIGURATION }} -o packages
    - name: Push packages to NuGet.org
      run: |
        dotnet nuget push ./packages/Easypay.*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
    - name: Create Release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false



